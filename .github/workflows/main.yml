name: Python CI Pipeline

# Запускается при каждом push в репозиторий
on: [push]

jobs:
  python-tests:
    name: Run Python Tests
    runs-on: ubuntu-latest
    
    # Добавляем permissions для записи
    permissions:
      contents: write
    
    steps:
    # Шаг 1: Получить код из репозитория
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # Шаг 2: Настроить Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Шаг 3: Обновить документацию
    - name: Update Documentation
      run: |
        echo "=== ОБНОВЛЕНИЕ ДОКУМЕНТАЦИИ ==="
        current_time=$(date '+%Y-%m-%d %H:%M:%S UTC')
        echo "Это документация. Последнее изменение было: $current_time" > DOCUMENTATION.md
        echo "Документация обновлена: $current_time"

    # Шаг 4: Зафиксировать изменения в документации (принудительно)
    - name: Commit Documentation Changes
      run: |
        echo "=== ФИКСАЦИЯ ИЗМЕНЕНИЙ В ДОКУМЕНТАЦИИ ==="
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add DOCUMENTATION.md
        
        # Коммитим изменения
        git commit -m "Автоматическое обновление документации: $(date '+%Y-%m-%d %H:%M:%S')" || echo "Нет изменений для коммита"
        
        # Принудительно обновляем remote ссылку и пушим
        git fetch origin
        git rebase origin/main
        git push origin HEAD:main
        echo "Изменения в документации зафиксированы и отправлены"

    # Шаг 5: Запуск Unit-тестов
    - name: Run Unit Tests
      run: |
        echo "=== ЗАПУСК UNIT-ТЕСТОВ ==="
        python3 test_unit.py

    # Шаг 6: Запуск Интеграционных тестов
    - name: Run Integration Tests
      run: |
        echo "=== ЗАПУСК ИНТЕГРАЦИОННЫХ ТЕСТОВ ==="
        python3 test_integration.py

    # Шаг 7: Запуск всех тестов
    - name: Run All Tests
      run: |
        echo "=== ЗАПУСК ВСЕХ ТЕСТОВ ==="
        python3 run_tests.py

    # Шаг 8: Успешное завершение
    - name: Success Message
      run: |
        echo "========================================"
        echo "ВЫ МОЛОДЕЦ! ВСЕ ТЕСТЫ ПРОЙДЕНЫ!"
        echo "========================================"
        echo "Python тестирование завершено успешно"
        echo "Ветка: ${GITHUB_REF##*/}"
        echo "Документация обновлена"
        echo "========================================"
